
//
// StyleDictionary+Struct.swift
//

// Do not edit directly
// Generated on Wed, 21 Dec 2022 11:19:35 GMT


import UIKit

internal struct StyleDictionaryStruct {
    internal static let badgeBoldCrimsonBackgroundColor = UIColor(red: 0.529, green: 0.137, blue: 0.271, alpha: 1)
    internal static let badgeBoldCrimsonColor = white
    internal static let badgeBoldCriticalBackgroundColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let badgeBoldCriticalColor = white
    internal static let badgeBoldInfoBackgroundColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let badgeBoldInfoColor = white
    internal static let badgeBoldMutedBackgroundColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let badgeBoldMutedColor = white
    internal static let badgeBoldOrangeBackgroundColor = UIColor(red: 0.561, green: 0.169, blue: 0.000, alpha: 1)
    internal static let badgeBoldOrangeColor = white
    internal static let badgeBoldSuccessBackgroundColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let badgeBoldSuccessColor = white
    internal static let badgeBoldWarningBackgroundColor = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let badgeBoldWarningColor = black
    internal static let badgeIconAlignItems = center
    internal static let badgeIconDisplay = flex
    internal static let badgeIconLargeLeadingIconMarginRight = 8px
    internal static let badgeIconLargeSize = 20
    internal static let badgeIconLargeTrailingIconMarginLeft = 8px
    internal static let badgeIconSmallLeadingIconMarginRight = 4px
    internal static let badgeIconSmallSize = 16
    internal static let badgeIconSmallTrailingIconMarginLeft = 4px
    internal static let badgeNeutralCrimsonBackgroundColor = UIColor(red: 0.988, green: 0.831, blue: 0.839, alpha: 1)
    internal static let badgeNeutralCrimsonColor = UIColor(red: 0.365, green: 0.094, blue: 0.176, alpha: 1)
    internal static let badgeNeutralCriticalBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let badgeNeutralCriticalColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let badgeNeutralInfoBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let badgeNeutralInfoColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let badgeNeutralMutedBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let badgeNeutralMutedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let badgeNeutralOrangeBackgroundColor = UIColor(red: 1.000, green: 0.784, blue: 0.612, alpha: 1)
    internal static let badgeNeutralOrangeColor = UIColor(red: 0.361, green: 0.094, blue: 0.000, alpha: 1)
    internal static let badgeNeutralSuccessBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let badgeNeutralSuccessColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let badgeNeutralWarningBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let badgeNeutralWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let badgeNotificationBorderRadius = 4px
    internal static let badgeNotificationDisplay = inline-block
    internal static let badgeNotificationHeight = 8px
    internal static let badgeNotificationWidth = 8px
    internal static let badgeOutlineCrimsonBackgroundColor = UIColor(red: 0.988, green: 0.831, blue: 0.839, alpha: 1)
    internal static let badgeOutlineCrimsonColor = UIColor(red: 0.365, green: 0.094, blue: 0.176, alpha: 1)
    internal static let badgeOutlineCrimsonOutline = 1px solid UIColor(red: 0.365, green: 0.094, blue: 0.176, alpha: 1)
    internal static let badgeOutlineCriticalBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let badgeOutlineCriticalColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let badgeOutlineCriticalOutline = 1px solid UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let badgeOutlineInfoBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let badgeOutlineInfoColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let badgeOutlineInfoOutline = 1px solid UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let badgeOutlineMutedBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let badgeOutlineMutedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let badgeOutlineMutedOutline = 1px solid UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let badgeOutlineOrangeBackgroundColor = UIColor(red: 1.000, green: 0.784, blue: 0.612, alpha: 1)
    internal static let badgeOutlineOrangeColor = UIColor(red: 0.361, green: 0.094, blue: 0.000, alpha: 1)
    internal static let badgeOutlineOrangeOutline = 1px solid UIColor(red: 0.361, green: 0.094, blue: 0.000, alpha: 1)
    internal static let badgeOutlineSuccessBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let badgeOutlineSuccessColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let badgeOutlineSuccessOutline = 1px solid UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let badgeOutlineWarningBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let badgeOutlineWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let badgeOutlineWarningOutline = 1px solid UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let badgeRootAlignItems = center
    internal static let badgeRootBorderRadius = 32px
    internal static let badgeRootDisplay = flex
    internal static let badgeRootLabelLargeFontFamily = Inter
    internal static let badgeRootLabelLargeFontSize = 14px
    internal static let badgeRootLabelLargeFontWeight = 500
    internal static let badgeRootLabelLargeLineHeight = 20px
    internal static let badgeRootLabelSmallFontFamily = Inter
    internal static let badgeRootLabelSmallFontSize = 12px
    internal static let badgeRootLabelSmallFontWeight = 500
    internal static let badgeRootLabelSmallLineHeight = 16px
    internal static let badgeRootLargeFontSize = 14px
    internal static let badgeRootLargeHeight = 20px
    internal static let badgeRootPadding = 4px 8px
    internal static let badgeRootSmallFontSize = 12px
    internal static let badgeRootSmallHeight = 12px
    internal static let badgeTransparentCrimsonBackgroundColor = transparent
    internal static let badgeTransparentCrimsonColor = UIColor(red: 0.365, green: 0.094, blue: 0.176, alpha: 1)
    internal static let badgeTransparentCriticalBackgroundColor = transparent
    internal static let badgeTransparentCriticalColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let badgeTransparentInfoBackgroundColor = transparent
    internal static let badgeTransparentInfoColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let badgeTransparentMutedBackgroundColor = transparent
    internal static let badgeTransparentMutedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let badgeTransparentOrangeBackgroundColor = transparent
    internal static let badgeTransparentOrangeColor = UIColor(red: 0.561, green: 0.169, blue: 0.000, alpha: 1)
    internal static let badgeTransparentSuccessBackgroundColor = transparent
    internal static let badgeTransparentSuccessColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let badgeTransparentWarningBackgroundColor = transparent
    internal static let badgeTransparentWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let bannerAlertAlertActionFlex = none
    internal static let bannerAlertAlertActionPadding = 0 0 0 0.75rem
    internal static let bannerAlertAlertIconMarginRight = 0.5rem
    internal static let bannerAlertAlertIconPaddingBottom = 0
    internal static let bannerAlertAlertIconPaddingTop = 0
    internal static let bannerAlertAlertMessageGutterMargin = 0 0 0.25rem 0
    internal static let bannerAlertAlertMessagePaddingBottom = 0
    internal static let bannerAlertAlertMessagePaddingTop = 0
    internal static let bannerAlertAlertRootAlignItems = center
    internal static let bannerAlertAlertRootBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let bannerAlertAlertRootBorderLeftWidth = 0.25rem
    internal static let bannerAlertAlertRootBorderWidth = 0.0625rem
    internal static let bannerAlertAlertRootColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let bannerAlertAlertRootFontFamily = Inter
    internal static let bannerAlertAlertRootFontSize = 0.875rem
    internal static let bannerAlertAlertRootFontWeight = 400
    internal static let bannerAlertAlertRootLineHeight = 1.25rem
    internal static let bannerAlertAlertRootPadding = 0.75rem 0.5rem 0.75rem 0.75rem
    internal static let bannerAlertSnackbarCloseIconMarginRight = 0.5rem
    internal static let bannerAlertSnackbarDesktopButtonMarginRight = 0.5rem
    internal static let bannerAlertSnackbarDesktopButtonSmDisplay = none
    internal static let bannerAlertSnackbarMessageDisplay = -webkit-box !important
    internal static let bannerAlertSnackbarMessageMaxHeight = 2.5rem
    internal static let bannerAlertSnackbarMessageOverflow = hidden
    internal static let bannerAlertSnackbarMessageTextOverflow = ellipsis
    internal static let bannerAlertSnackbarMessageWebkitBoxOrient = vertical
    internal static let bannerAlertSnackbarMessageWebkitLineClamp = 2
    internal static let bannerAlertSnackbarMessageWhiteSpace = normal
    internal static let bannerAlertSnackbarMobileButtonLgDisplay = none
    internal static let bannerAlertSnackbarMobileButtonMarginLeft = -0.625rem
    internal static let bannerAlertSnackbarMobileButtonMarginTop = 0.5rem
    internal static let bannerAlertSnackbarMobileButtonMdDisplay = none
    internal static let bannerAlertSnackbarMobileButtonSmDisplay = block
    internal static let bannerAlertSnackbarRootAlignItems = center
    internal static let bannerAlertSnackbarRootBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let bannerAlertSnackbarRootBorderLeftWidth = 0.25rem
    internal static let bannerAlertSnackbarRootBorderWidth = 0.0625rem
    internal static let bannerAlertSnackbarRootColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let bannerAlertSnackbarRootCritical = UIColor(red: 0.890, green: 0.078, blue: 0.161, alpha: 1)
    internal static let bannerAlertSnackbarRootDesktopMaxWidth = 45.3125rem
    internal static let bannerAlertSnackbarRootDesktopMinWidth = 35.9375rem
    internal static let bannerAlertSnackbarRootFontFamily = Inter
    internal static let bannerAlertSnackbarRootFontSize = 0.875rem
    internal static let bannerAlertSnackbarRootFontWeight = 400
    internal static let bannerAlertSnackbarRootInfo = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let bannerAlertSnackbarRootLineHeight = 1.25rem
    internal static let bannerAlertSnackbarRootMobileMaxWidth = 18.4375rem
    internal static let bannerAlertSnackbarRootMobileMinWidth = 18.4375rem
    internal static let bannerAlertSnackbarRootPadding = 0.75rem 0.5rem 0.75rem 0.75rem
    internal static let bannerAlertSnackbarRootSuccess = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let bannerAlertSnackbarRootTextAlign = left
    internal static let bannerAlertSnackbarRootWarning = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let bannerAlertSnackbarRootWidth = 100%
    internal static let borderRadiusRadiusFull = 36px
    internal static let borderRadiusRadiusLarge = 12px
    internal static let borderRadiusRadiusMedium = 8px
    internal static let borderRadiusRadiusNone = none
    internal static let borderRadiusRadiusSmall = 4px
    internal static let borderWidthLarge = 4px
    internal static let borderWidthMedium = 2px
    internal static let borderWidthNone = 0px
    internal static let borderWidthSmall = 1px
    internal static let buttonColorCriticalPrimaryBackground = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalPrimaryBackgroundHover = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let buttonColorCriticalPrimaryBackgroundPressed = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorCriticalPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorCriticalPrimaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorCriticalPrimaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorCriticalPrimaryLabelPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorCriticalPrimaryShadow = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalSecondaryBackgroundHover = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let buttonColorCriticalSecondaryBackgroundPressed = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let buttonColorCriticalSecondaryBorder = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalSecondaryBorderHover = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let buttonColorCriticalSecondaryBorderPressed = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorCriticalSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorCriticalSecondaryLabel = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalSecondaryLabelHover = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let buttonColorCriticalSecondaryLabelPressed = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalSecondaryShadow = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalSelectedBackground = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let buttonColorCriticalSelectedBackgroundHover = UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let buttonColorCriticalSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorCriticalSelectedBackgroundPressed = UIColor(red: 0.890, green: 0.078, blue: 0.161, alpha: 1)
    internal static let buttonColorCriticalSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorCriticalSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorCriticalSelectedLabel = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalSelectedLabelHover = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalSelectedLabelPressed = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalSelectedShadow = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalTertiaryBackgroundHover = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let buttonColorCriticalTertiaryBackgroundPressed = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let buttonColorCriticalTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorCriticalTertiaryLabel = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorCriticalTertiaryLabelHover = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let buttonColorCriticalTertiaryLabelPressed = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let buttonColorCriticalTertiaryShadow = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let buttonColorInfoPrimaryBackground = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoPrimaryBackgroundHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let buttonColorInfoPrimaryBackgroundPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorInfoPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoPrimaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoPrimaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoPrimaryLabelPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoPrimaryShadow = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoSecondaryBackgroundHover = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoSecondaryBackgroundPressed = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let buttonColorInfoSecondaryBorder = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoSecondaryBorderHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let buttonColorInfoSecondaryBorderPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorInfoSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorInfoSecondaryLabel = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoSecondaryLabelHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let buttonColorInfoSecondaryLabelPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoSecondaryShadow = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoSelectedBackground = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let buttonColorInfoSelectedBackgroundHover = UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let buttonColorInfoSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorInfoSelectedBackgroundPressed = UIColor(red: 0.180, green: 0.620, blue: 0.980, alpha: 1)
    internal static let buttonColorInfoSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorInfoSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorInfoSelectedLabel = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoSelectedLabelHover = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoSelectedLabelPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoSelectedShadow = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoTertiaryBackgroundHover = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let buttonColorInfoTertiaryBackgroundPressed = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let buttonColorInfoTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorInfoTertiaryLabel = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorInfoTertiaryLabelHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let buttonColorInfoTertiaryLabelPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let buttonColorInfoTertiaryShadow = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let buttonColorMutedLightPrimaryBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightPrimaryBackgroundHover = UIColor(red: 0.988, green: 0.988, blue: 0.992, alpha: 1)
    internal static let buttonColorMutedLightPrimaryBackgroundPressed = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let buttonColorMutedLightPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedLightPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightPrimaryLabel = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedLightPrimaryLabelHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let buttonColorMutedLightPrimaryLabelPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedLightPrimaryShadow = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryBackgroundHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryBackgroundHoverOpacity = 0.08
    internal static let buttonColorMutedLightSecondaryBackgroundPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryBackgroundPressedOpacity = 0.12
    internal static let buttonColorMutedLightSecondaryBorder = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryBorderHover = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let buttonColorMutedLightSecondaryBorderPressed = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedLightSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorMutedLightSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedLightSecondaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSecondaryLabelPressed = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedLightSecondaryShadow = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSelectedBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSelectedBackgroundHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorMutedLightSelectedBackgroundPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorMutedLightSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedLightSelectedLabel = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedLightSelectedLabelHover = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedLightSelectedLabelPressed = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedLightSelectedShadow = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightTertiaryBackgroundHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightTertiaryBackgroundHoverOpacity = 0.08
    internal static let buttonColorMutedLightTertiaryBackgroundPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightTertiaryBackgroundPressedOpacity = 0.12
    internal static let buttonColorMutedLightTertiaryBorder = none
    internal static let buttonColorMutedLightTertiaryBorderHover = none
    internal static let buttonColorMutedLightTertiaryBorderPressed = none
    internal static let buttonColorMutedLightTertiaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorMutedLightTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedLightTertiaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightTertiaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedLightTertiaryLabelPressed = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedLightTertiaryShadow = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedPrimaryBackground = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedPrimaryBackgroundHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let buttonColorMutedPrimaryBackgroundPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedPrimaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedPrimaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedPrimaryLabelPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorMutedPrimaryShadow = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedSecondaryBackgroundHover = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let buttonColorMutedSecondaryBackgroundPressed = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let buttonColorMutedSecondaryBorder = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedSecondaryBorderHover = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let buttonColorMutedSecondaryBorderPressed = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorMutedSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedSecondaryLabel = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedSecondaryLabelHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let buttonColorMutedSecondaryLabelPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedSecondaryShadow = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedSelectedBackground = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let buttonColorMutedSelectedBackgroundHover = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorMutedSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorMutedSelectedBackgroundPressed = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let buttonColorMutedSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorMutedSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedSelectedLabel = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedSelectedLabelHover = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedSelectedLabelPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedSelectedShadow = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let buttonColorMutedTertiaryBackgroundHover = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let buttonColorMutedTertiaryBackgroundPressed = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let buttonColorMutedTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorMutedTertiaryLabel = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorMutedTertiaryLabelHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let buttonColorMutedTertiaryLabelPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorMutedTertiaryShadow = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let buttonColorPrimePrimaryBackground = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryBackgroundHover = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryBackgroundPressed = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryBorderHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryBorderPressed = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorPrimePrimaryDisabledBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimePrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorPrimePrimaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorPrimePrimaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorPrimePrimaryLabelPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorPrimePrimaryShadow = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryBackgroundHover = UIColor(red: 1.000, green: 0.973, blue: 0.961, alpha: 1)
    internal static let buttonColorPrimeSecondaryBackgroundPressed = UIColor(red: 0.996, green: 0.886, blue: 0.839, alpha: 1)
    internal static let buttonColorPrimeSecondaryBorder = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryBorderHover = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryBorderPressed = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorPrimeSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorPrimeSecondaryLabel = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryLabelHover = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryLabelPressed = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSecondaryShadow = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSelectedBackground = UIColor(red: 0.996, green: 0.886, blue: 0.839, alpha: 1)
    internal static let buttonColorPrimeSelectedBackgroundHover = UIColor(red: 1.000, green: 0.973, blue: 0.961, alpha: 1)
    internal static let buttonColorPrimeSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorPrimeSelectedBackgroundPressed = UIColor(red: 0.894, green: 0.349, blue: 0.075, alpha: 1)
    internal static let buttonColorPrimeSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorPrimeSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorPrimeSelectedLabel = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSelectedLabelHover = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSelectedLabelPressed = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeSelectedShadow = none
    internal static let buttonColorPrimeTertiaryBackgroundHover = UIColor(red: 1.000, green: 0.973, blue: 0.961, alpha: 1)
    internal static let buttonColorPrimeTertiaryBackgroundHoverOpacity = 0
    internal static let buttonColorPrimeTertiaryBackgroundPressed = UIColor(red: 0.996, green: 0.886, blue: 0.839, alpha: 1)
    internal static let buttonColorPrimeTertiaryBackgroundPressedOpacity = 0
    internal static let buttonColorPrimeTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorPrimeTertiaryLabel = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeTertiaryLabelHover = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeTertiaryLabelPressed = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let buttonColorPrimeTertiaryShadow = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let buttonColorSuccessPrimaryBackground = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessPrimaryBackgroundHover = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let buttonColorSuccessPrimaryBackgroundPressed = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorSuccessPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorSuccessPrimaryLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorSuccessPrimaryLabelHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorSuccessPrimaryLabelPressed = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorSuccessPrimaryShadow = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessSecondaryBackgroundHover = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let buttonColorSuccessSecondaryBackgroundPressed = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let buttonColorSuccessSecondaryBorder = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessSecondaryBorderHover = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let buttonColorSuccessSecondaryBorderPressed = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorSuccessSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorSuccessSecondaryLabel = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessSecondaryLabelHover = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let buttonColorSuccessSecondaryLabelPressed = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessSecondaryShadow = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessSelectedBackground = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let buttonColorSuccessSelectedBackgroundHover = UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let buttonColorSuccessSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorSuccessSelectedBackgroundPressed = UIColor(red: 0.141, green: 0.859, blue: 0.573, alpha: 1)
    internal static let buttonColorSuccessSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorSuccessSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorSuccessSelectedLabel = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessSelectedLabelHover = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessSelectedLabelPressed = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessSelectedShadow = UIColor(red: 0.129, green: 0.678, blue: 0.451, alpha: 1)
    internal static let buttonColorSuccessTertiaryBackgroundHover = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let buttonColorSuccessTertiaryBackgroundPressed = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let buttonColorSuccessTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorSuccessTertiaryLabel = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorSuccessTertiaryLabelHover = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let buttonColorSuccessTertiaryLabelPressed = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let buttonColorSuccessTertiaryShadow = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let buttonColorWarningPrimaryBackground = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let buttonColorWarningPrimaryBackgroundHover = UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1)
    internal static let buttonColorWarningPrimaryBackgroundPressed = UIColor(red: 0.678, green: 0.475, blue: 0.000, alpha: 1)
    internal static let buttonColorWarningPrimaryDisabledBackground = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorWarningPrimaryDisabledLabel = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let buttonColorWarningPrimaryLabel = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorWarningPrimaryLabelHover = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorWarningPrimaryLabelPressed = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let buttonColorWarningPrimaryShadow = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let buttonColorWarningSecondaryBackgroundHover = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let buttonColorWarningSecondaryBackgroundPressed = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let buttonColorWarningSecondaryBorder = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let buttonColorWarningSecondaryBorderHover = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSecondaryBorderPressed = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSecondaryDisabledBorder = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let buttonColorWarningSecondaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorWarningSecondaryLabel = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let buttonColorWarningSecondaryLabelHover = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSecondaryLabelPressed = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSecondaryShadow = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let buttonColorWarningSelectedBackground = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let buttonColorWarningSelectedBackgroundHover = UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let buttonColorWarningSelectedBackgroundHoverOpacity = 0
    internal static let buttonColorWarningSelectedBackgroundPressed = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let buttonColorWarningSelectedBackgroundPressedOpacity = 0
    internal static let buttonColorWarningSelectedDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorWarningSelectedLabel = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSelectedLabelHover = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSelectedLabelPressed = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningSelectedShadow = UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1)
    internal static let buttonColorWarningTertiaryBackgroundHover = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let buttonColorWarningTertiaryBackgroundPressed = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let buttonColorWarningTertiaryDisabledLabel = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let buttonColorWarningTertiaryLabel = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let buttonColorWarningTertiaryLabelHover = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningTertiaryLabelPressed = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let buttonColorWarningTertiaryShadow = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let checkboxColorBackgroundCheckedDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBackgroundCheckedDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorBackgroundCheckedFocus = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBackgroundCheckedHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let checkboxColorBackgroundIndeterminateDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBackgroundIndeterminateDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorBackgroundIndeterminateFocus = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBackgroundIndeterminateHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let checkboxColorBackgroundUncheckedDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let checkboxColorBackgroundUncheckedDisabled = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let checkboxColorBackgroundUncheckedFocus = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let checkboxColorBackgroundUncheckedHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let checkboxColorBorderCheckedDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBorderCheckedDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorBorderCheckedFocus = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBorderCheckedHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let checkboxColorBorderIndeterminateDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBorderIndeterminateDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorBorderIndeterminateFocus = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorBorderIndeterminateHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let checkboxColorBorderUncheckedDefault = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let checkboxColorBorderUncheckedDisabled = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let checkboxColorBorderUncheckedFocus = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let checkboxColorBorderUncheckedHover = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorLabelDefault = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let checkboxColorLabelDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let checkboxColorLabelFocus = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let checkboxColorLabelHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let checkboxColorShadowChecked = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorShadowIndeterminate = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let checkboxColorShadowUnchecked = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let checkboxLabelFontFamily = Inter
    internal static let checkboxLabelFontSizeSmall = 0.75rem
    internal static let checkboxLabelFontSizeStandard = 0.875rem
    internal static let checkboxLabelFontWeight = 400
    internal static let checkboxLabelLineHeightSmall = 1rem
    internal static let checkboxLabelLineHeightStandard = 1.25rem
    internal static let colorBrightblue100 = UIColor(red: 0.784, green: 0.890, blue: 0.980, alpha: 1)
    internal static let colorBrightblue200 = UIColor(red: 0.949, green: 0.973, blue: 0.992, alpha: 1)
    internal static let colorBrightblue300 = UIColor(red: 0.882, green: 0.933, blue: 0.980, alpha: 1)
    internal static let colorBrightblue400 = UIColor(red: 0.714, green: 0.820, blue: 0.941, alpha: 1)
    internal static let colorBrightblue500 = UIColor(red: 0.478, green: 0.690, blue: 0.886, alpha: 1)
    internal static let colorBrightblue600 = UIColor(red: 0.157, green: 0.478, blue: 0.800, alpha: 1)
    internal static let colorBrightblue700 = UIColor(red: 0.114, green: 0.373, blue: 0.647, alpha: 1)
    internal static let colorCrimson100 = UIColor(red: 0.980, green: 0.941, blue: 0.941, alpha: 1)
    internal static let colorCrimson200 = UIColor(red: 0.988, green: 0.831, blue: 0.839, alpha: 1)
    internal static let colorCrimson300 = UIColor(red: 0.980, green: 0.698, blue: 0.718, alpha: 1)
    internal static let colorCrimson400 = UIColor(red: 0.965, green: 0.518, blue: 0.529, alpha: 1)
    internal static let colorCrimson500 = UIColor(red: 0.941, green: 0.337, blue: 0.388, alpha: 1)
    internal static let colorCrimson600 = UIColor(red: 0.529, green: 0.137, blue: 0.271, alpha: 1)
    internal static let colorCrimson700 = UIColor(red: 0.365, green: 0.094, blue: 0.176, alpha: 1)
    internal static let colorCritical100 = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let colorCritical200 = UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let colorCritical300 = UIColor(red: 0.890, green: 0.078, blue: 0.161, alpha: 1)
    internal static let colorCritical400 = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let colorCritical50 = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let colorCritical500 = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let colorCritical600 = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let colorHuman100 = UIColor(red: 0.859, green: 0.612, blue: 0.467, alpha: 1)
    internal static let colorHuman200 = UIColor(red: 0.980, green: 0.757, blue: 0.667, alpha: 1)
    internal static let colorHuman300 = UIColor(red: 0.988, green: 0.835, blue: 0.773, alpha: 1)
    internal static let colorHuman400 = UIColor(red: 0.749, green: 0.451, blue: 0.341, alpha: 1)
    internal static let colorHuman500 = UIColor(red: 0.510, green: 0.306, blue: 0.231, alpha: 1)
    internal static let colorHuman600 = UIColor(red: 0.341, green: 0.184, blue: 0.125, alpha: 1)
    internal static let colorHuman700 = UIColor(red: 0.180, green: 0.090, blue: 0.059, alpha: 1)
    internal static let colorInfo100 = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let colorInfo200 = UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let colorInfo300 = UIColor(red: 0.180, green: 0.620, blue: 0.980, alpha: 1)
    internal static let colorInfo400 = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let colorInfo50 = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let colorInfo500 = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let colorInfo600 = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let colorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let colorOrange100 = UIColor(red: 1.000, green: 0.914, blue: 0.863, alpha: 1)
    internal static let colorOrange200 = UIColor(red: 1.000, green: 0.784, blue: 0.612, alpha: 1)
    internal static let colorOrange300 = UIColor(red: 1.000, green: 0.643, blue: 0.314, alpha: 1)
    internal static let colorOrange400 = UIColor(red: 1.000, green: 0.420, blue: 0.094, alpha: 1)
    internal static let colorOrange500 = UIColor(red: 0.961, green: 0.345, blue: 0.000, alpha: 1)
    internal static let colorOrange600 = UIColor(red: 0.561, green: 0.169, blue: 0.000, alpha: 1)
    internal static let colorOrange700 = UIColor(red: 0.361, green: 0.094, blue: 0.000, alpha: 1)
    internal static let colorPrimary100 = UIColor(red: 0.996, green: 0.886, blue: 0.839, alpha: 1)
    internal static let colorPrimary200 = UIColor(red: 0.961, green: 0.533, blue: 0.341, alpha: 1)
    internal static let colorPrimary300 = UIColor(red: 0.894, green: 0.349, blue: 0.075, alpha: 1)
    internal static let colorPrimary400 = UIColor(red: 0.780, green: 0.286, blue: 0.000, alpha: 1)
    internal static let colorPrimary50 = UIColor(red: 1.000, green: 0.973, blue: 0.961, alpha: 1)
    internal static let colorPrimary500 = UIColor(red: 0.620, green: 0.255, blue: 0.000, alpha: 1)
    internal static let colorPrimary600 = UIColor(red: 0.529, green: 0.231, blue: 0.000, alpha: 1)
    internal static let colorPrimitiveBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let colorPrimitiveWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let colorSecondary0 = UIColor(red: 0.988, green: 0.988, blue: 0.992, alpha: 1)
    internal static let colorSecondary100 = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let colorSecondary1000 = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let colorSecondary200 = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let colorSecondary300 = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let colorSecondary400 = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let colorSecondary50 = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let colorSecondary500 = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let colorSecondary600 = UIColor(red: 0.420, green: 0.412, blue: 0.482, alpha: 1)
    internal static let colorSecondary700 = UIColor(red: 0.322, green: 0.314, blue: 0.400, alpha: 1)
    internal static let colorSecondary800 = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let colorSecondary900 = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let colorSuccess100 = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let colorSuccess200 = UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let colorSuccess300 = UIColor(red: 0.141, green: 0.859, blue: 0.573, alpha: 1)
    internal static let colorSuccess400 = UIColor(red: 0.129, green: 0.678, blue: 0.451, alpha: 1)
    internal static let colorSuccess50 = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let colorSuccess500 = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let colorSuccess600 = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let colorSuccess700 = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let colorWarning100 = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let colorWarning200 = UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let colorWarning300 = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let colorWarning400 = UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1)
    internal static let colorWarning50 = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let colorWarning500 = UIColor(red: 0.678, green: 0.475, blue: 0.000, alpha: 1)
    internal static let colorWarning600 = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let colorWarning700 = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let dividerColorDark = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let dividerColorLight = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let dividerColorMuted = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let dividerOpacityDark = 0.16
    internal static let dividerOpacityLight = 0.05
    internal static let dividerOpacityMuted = 1
    internal static let dividerWeight1Size = 0.063rem
    internal static let dividerWeight2Size = 0.125rem
    internal static let elevation01 = 0.0px 2.0px 4.0px 0px rgba(0, 0, 0, 0.12),0.0px 1.0px 4.0px 0px rgba(0, 0, 0, 0.16)
    internal static let elevation02 = 0.0px 2.0px 6.0px 0px rgba(0, 0, 0, 0.18),0.0px 3.0px 8.0px 0px rgba(0, 0, 0, 0.14)
    internal static let elevation03 = 0.0px 4.0px 12.0px 0px rgba(0, 0, 0, 0.18),0.0px 6.0px 20.0px 0px rgba(0, 0, 0, 0.14)
    internal static let elevation04 = 0.0px 6.0px 20.0px 0px rgba(0, 0, 0, 0.14),0.0px 8.0px 26.0px 0px rgba(0, 0, 0, 0.12)
    internal static let elevation05 = 0.0px 6.0px 18.0px 0px rgba(0, 0, 0, 0.1),0.0px 8.0px 24.0px 0px rgba(0, 0, 0, 0.1),0.0px 4.0px 24.0px 8.0px rgba(0, 0, 0, 0.08)
    internal static let elevation06 = 0.0px 6.0px 22.0px 4.0px rgba(0, 0, 0, 0.12),0.0px 8.0px 28.0px 4.0px rgba(0, 0, 0, 0.1),0.0px 4.0px 30.0px 10.0px rgba(0, 0, 0, 0.08)
    internal static let inputLabelBaseColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let inputLabelBaseDisplay = flex
    internal static let inputLabelBaseFontFamily = Inter
    internal static let inputLabelBaseFontSize = 0.875rem
    internal static let inputLabelBaseFontWeight = 500
    internal static let inputLabelBaseJustifyContent = space-between
    internal static let inputLabelBaseLineHeight = 1.25rem
    internal static let inputLabelBaseMarginBottom = .25rem
    internal static let inputLabelErrorColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let inputLabelErrorFontSize = 0.75rem
    internal static let inputLabelErrorFontWeight = 400
    internal static let inputLabelErrorLineHeight = 1rem
    internal static let inputLabelErrorMarginTop = 0.25rem
    internal static let inputLabelErrorWordBreak = break-word
    internal static let inputLabelHelperColor = UIColor(red: 0.322, green: 0.314, blue: 0.400, alpha: 1)
    internal static let inputLabelHelperFontSize = 0.75rem
    internal static let inputLabelHelperFontWeight = 400
    internal static let inputLabelHelperLineHeight = 1rem
    internal static let inputLabelHelperMarginTop = .25rem
    internal static let inputLabelHelperWordBreak = break-word
    internal static let inputLabelSuccessColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let inputLabelSuccessFontSize = 0.75rem
    internal static let inputLabelSuccessFontWeight = 400
    internal static let inputLabelSuccessLineHeight = 1rem
    internal static let inputLabelSuccessMarginTop = 0.25rem
    internal static let inputLabelSuccessWordBreak = break-word
    internal static let inputPlaceholderColor = UIColor(red: 0.322, green: 0.314, blue: 0.400, alpha: 1)
    internal static let inputPlaceholderFontFamily = Inter
    internal static let inputPlaceholderFontStyle = italic
    internal static let inputPlaceholderFontWeight = 400
    internal static let inputPlaceholderLargeFontSize = 0.875rem
    internal static let inputPlaceholderLargeLineHeight = 1.25rem
    internal static let inputPlaceholderSmallFontSize = 0.75rem
    internal static let inputPlaceholderSmallLineHeight = 1rem
    internal static let inputSizeLargeFontSize = 0.875rem
    internal static let inputSizeLargeHeight = 2.75rem
    internal static let inputSizeLargeLineHeight = 1.25rem
    internal static let inputSizeSmallFontSize = 0.75rem
    internal static let inputSizeSmallHeight = 2.25rem
    internal static let inputSizeSmallLineHeight = 1rem
    internal static let inputTypeDefaultBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let inputTypeDefaultColor = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let inputTypeDefaultOutline = 1px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let inputTypeDisabledBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let inputTypeDisabledFontFamily = Inter
    internal static let inputTypeDisabledFontStyle = italic
    internal static let inputTypeDisabledOutline = 1px solid UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let inputTypeErrorOutline = 2px solid UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let inputTypeFocusBorder = 2px solid UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let inputTypeFocusBorderRadius = 4px
    internal static let inputTypeHoverBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let inputTypeHoverOutline = 1px solid UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let inputTypeReadOnlyBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let inputTypeReadOnlyColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let inputTypeReadOnlyOutline = 1px solid UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let inputTypeRootBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let inputTypeRootBorder = 1px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let inputTypeRootBorderRadius = 4px
    internal static let inputTypeRootBoxSizing = border-box
    internal static let inputTypeRootFontFamily = Inter
    internal static let inputTypeRootFontSize = 0.875rem
    internal static let inputTypeRootFontStyle = normal
    internal static let inputTypeRootFontWeight = 400
    internal static let inputTypeRootJustifyContent = space-between
    internal static let inputTypeRootLineHeight = 1.25rem
    internal static let inputTypeRootMinWidth = 17.5rem
    internal static let inputTypeRootPadding = 0.75rem 1rem
    internal static let inputTypeRootTextOverflow = ellipsis
    internal static let inputTypeSuccessOutline = 2px solid UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let linkColorLabelDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let linkColorLabelDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let linkColorLabelHover = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let linkColorLabelPressed = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let linkColorShadow = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let progressbarRootContainerMainBackground = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let progressbarRootContainerMainBorderRadius = 4px
    internal static let progressbarRootContainerMainMargin = .5rem .5rem .5rem 0
    internal static let progressbarRootContainerMainOverflow = hidden
    internal static let progressbarRootContainerMainWidth = 100%
    internal static let progressbarRootCriticalBackground = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let progressbarRootCriticalGradientBackground = linear-gradient(270deg, rgba(0,0,0,0) 0%, UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1) 43.81%, UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1) 54.76%, rgba(0,0,0,0) 91.43%)
    internal static let progressbarRootFillBackground = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let progressbarRootFillBorderRadius = 4px
    internal static let progressbarRootFillHeight = 100%
    internal static let progressbarRootFillTransformOrigin = left
    internal static let progressbarRootFillTransition = width 0.5s ease 0s, transform 0.5s ease 0s
    internal static let progressbarRootFillWidth = 40%
    internal static let progressbarRootInfoBackground = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let progressbarRootInfoGradientBackground = linear-gradient(270deg, rgba(0,0,0,0) 0%, UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1) 43.81%, UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1) 54.76%, rgba(0,0,0,0) 91.43%)
    internal static let progressbarRootLabelColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let progressbarRootLabelFontFamily = Inter
    internal static let progressbarRootLabelFontSize = 0.875rem
    internal static let progressbarRootLabelFontWeight = 500
    internal static let progressbarRootLabelLineHeight = 1.25rem
    internal static let progressbarRootLabelMinWidth = 2.5rem
    internal static let progressbarRootLoadingProgressBarAnimationAnimation = loadingAnimation 2s infinite linear
    internal static let progressbarRootLoadingProgressBarAnimationHeight = 100%
    internal static let progressbarRootLoadingProgressBarAnimationTransformOrigin = -100%
    internal static let progressbarRootLoadingProgressBarAnimationWidth = 100%
    internal static let progressbarRootSizeLargeHeight = .5rem
    internal static let progressbarRootSizeSmallHeight = .25rem
    internal static let progressbarRootStepProgressBarAnimationAnimation = 2s linear 0s infinite normal forwards loadingStepAnimation
    internal static let progressbarRootStepProgressBarAnimationAnimationDelay = 1s
    internal static let progressbarRootStepProgressBarAnimationTransformBox = fill-box
    internal static let progressbarRootStepProgressBarAnimationTransformOrigin = 50% 50%
    internal static let progressbarRootSuccessBackground = UIColor(red: 0.129, green: 0.678, blue: 0.451, alpha: 1)
    internal static let progressbarRootSuccessGradientBackground = linear-gradient(270deg, rgba(0,0,0,0) 0%, UIColor(red: 0.129, green: 0.678, blue: 0.451, alpha: 1) 43.81%, UIColor(red: 0.129, green: 0.678, blue: 0.451, alpha: 1) 54.76%, rgba(0,0,0,0) 91.43%)
    internal static let progressbarRootWarningBackground = UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1)
    internal static let progressbarRootWarningGradientBackground = linear-gradient(270deg, rgba(0,0,0,0) 0%, UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1) 43.81%, UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1) 54.76%, rgba(0,0,0,0) 91.43%)
    internal static let radioColorBackgroundCheckedDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let radioColorBackgroundCheckedDisabled = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let radioColorBackgroundCheckedFocus = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let radioColorBackgroundCheckedHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let radioColorBackgroundUncheckedDefault = none
    internal static let radioColorBackgroundUncheckedDisabled = none
    internal static let radioColorBackgroundUncheckedFocus = none
    internal static let radioColorBackgroundUncheckedHover = none
    internal static let radioColorBorderCheckedDefault = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let radioColorBorderCheckedDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let radioColorBorderCheckedFocus = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let radioColorBorderCheckedHover = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let radioColorBorderUncheckedDefault = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let radioColorBorderUncheckedDisabled = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let radioColorBorderUncheckedFocus = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let radioColorBorderUncheckedHover = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let radioColorLabelDefault = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let radioColorLabelDisabled = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let radioColorLabelFocus = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let radioColorLabelHover = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let radioColorShadowChecked = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let radioColorShadowUnchecked = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let radioLabelFontFamily = Inter
    internal static let radioLabelFontSizeSmall = 0.75rem
    internal static let radioLabelFontSizeStandard = 0.875rem
    internal static let radioLabelFontWeight = 400
    internal static let radioLabelLineHeightSmall = 1rem
    internal static let radioLabelLineHeightStandard = 1.25rem
    internal static let sizeFontBase = CGFloat(16.00) /* the base size of the font */
    internal static let sizeFontLarge = CGFloat(32.00) /* the large size of the font */
    internal static let sizeFontMedium = CGFloat(16.00) /* the medium size of the font */
    internal static let sizeFontSmall = CGFloat(12.00) /* the small size of the font */
    internal static let spacing0 = 0rem
    internal static let spacing12 = .75rem
    internal static let spacing16 = 1rem
    internal static let spacing2 = .125rem
    internal static let spacing24 = 1.5rem
    internal static let spacing32 = 2rem
    internal static let spacing4 = .25rem
    internal static let spacing40 = 2.5rem
    internal static let spacing48 = 3rem
    internal static let spacing64 = 4rem
    internal static let spacing72 = 4.5rem
    internal static let spacing8 = .5rem
    internal static let switchTypeBaseDisabledBorder = none
    internal static let switchTypeBaseDisabledBoxShadow = none
    internal static let switchTypeBaseDisabledColor = UIColor(red: 0.988, green: 0.988, blue: 0.992, alpha: 1)
    internal static let switchTypeBaseDisabledHeightLarge = 1rem
    internal static let switchTypeBaseDisabledHeightSmall = 0.75rem
    internal static let switchTypeBaseDisabledTrackBackgroundColor = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let switchTypeBaseDisabledWidthLarge = 1rem
    internal static let switchTypeBaseDisabledWidthSmall = 0.75rem
    internal static let switchTypeBaseMargin = 1px 2px 0 2px
    internal static let switchTypeBasePadding = 0.625rem
    internal static let switchTypeBoxShadow = none
    internal static let switchTypeRootBackgroundColor = UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let switchTypeRootBorderRadius = 0.625rem
    internal static let switchTypeRootHeightLarge = 1.25rem
    internal static let switchTypeRootHeightSmall = 1rem
    internal static let switchTypeRootMarginLarge = 0 0.75rem
    internal static let switchTypeRootMarginSmall = 0 0.5rem
    internal static let switchTypeRootPadding = 0
    internal static let switchTypeRootWidthLarge = 2.25rem
    internal static let switchTypeRootWidthSmall = 1.75rem
    internal static let switchTypeShadowChecked = 0px 0px 0px 4px rgba(9, 117, 215, 0.4)
    internal static let switchTypeShadowUnchecked = 0px 0px 0px 4px rgba(61, 60, 82, 0.4)
    internal static let switchTypeThumbHeightLarge = 1rem
    internal static let switchTypeThumbHeightSmall = 0.75rem
    internal static let switchTypeThumbWidthLarge = 1rem
    internal static let switchTypeThumbWidthSmall = 0.75rem
    internal static let systemiconIconAlignItems = center
    internal static let systemiconIconDisplay = flex
    internal static let systemiconIconJustifyContent = center
    internal static let systemiconIconSizeLarge = 1.25rem
    internal static let systemiconIconSizeSmall = 0.75rem
    internal static let systemiconIconSizeStandard = 1rem
    internal static let systemiconIntentCriticalColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let systemiconIntentCriticalFocusOutline = 0.25rem solid UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let systemiconIntentCriticalHoverBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let systemiconIntentCriticalHoverColor = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let systemiconIntentCriticalPressedBackgroundColor = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let systemiconIntentDisabledBackgroundColor = transparent
    internal static let systemiconIntentDisabledColor = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let systemiconIntentInfoColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let systemiconIntentInfoFocusOutline = 0.25rem solid UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let systemiconIntentInfoHoverBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let systemiconIntentInfoHoverColor = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let systemiconIntentInfoPressedBackgroundColor = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let systemiconIntentMutedDarkColor = UIColor(red: 0.420, green: 0.412, blue: 0.482, alpha: 1)
    internal static let systemiconIntentMutedDarkFocusOutline = 0.25rem solid UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let systemiconIntentMutedDarkHoverBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let systemiconIntentMutedDarkHoverColor = UIColor(red: 0.322, green: 0.314, blue: 0.400, alpha: 1)
    internal static let systemiconIntentMutedDarkPressedBackgroundColor = UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let systemiconIntentMutedLightColor = white
    internal static let systemiconIntentMutedLightFocusOutline = 0.25rem solid white
    internal static let systemiconIntentMutedLightHoverBackgroundColor = rgba(255, 255, 255, 0.08)
    internal static let systemiconIntentMutedLightHoverColor = white
    internal static let systemiconIntentMutedLightPressedBackgroundColor = transparent
    internal static let systemiconIntentSuccessColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let systemiconIntentSuccessFocusOutline = 0.25rem solid UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let systemiconIntentSuccessHoverBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let systemiconIntentSuccessHoverColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let systemiconIntentSuccessPressedBackgroundColor = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let systemiconIntentTransparentBackgroundColor = transparent
    internal static let systemiconIntentWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let systemiconIntentWarningFocusOutline = 0.25rem solid UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let systemiconIntentWarningHoverBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let systemiconIntentWarningHoverColor = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let systemiconIntentWarningPressedBackgroundColor = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let systemiconRootBackgroundColor = white
    internal static let systemiconRootBorderRadius = 1.5rem
    internal static let systemiconRootDisplay = inline-block
    internal static let systemiconRootPadding = 0.125rem
    internal static let systemiconRootSizeLargeHeight = 1.25rem
    internal static let systemiconRootSizeLargeWidth = 1.25rem
    internal static let systemiconRootSizeSmallHeight = 0.75rem
    internal static let systemiconRootSizeSmallWidth = 0.75rem
    internal static let systemiconRootSizeStandardHeight = 1rem
    internal static let systemiconRootSizeStandardWidth = 1rem
    internal static let tagTypeBoldCriticalBackgroundColor = UIColor(red: 0.702, green: 0.078, blue: 0.114, alpha: 1)
    internal static let tagTypeBoldCriticalColor = white
    internal static let tagTypeBoldCriticalFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let tagTypeBoldCriticalHoverBackgroundColor = UIColor(red: 0.557, green: 0.063, blue: 0.078, alpha: 1)
    internal static let tagTypeBoldCriticalHoverColor = white
    internal static let tagTypeBoldCriticalHoverIcon = white
    internal static let tagTypeBoldCriticalPressedBackgroundColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeBoldCriticalPressedColor = white
    internal static let tagTypeBoldDisabledBackgroundColor = UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let tagTypeBoldDisabledColor = white
    internal static let tagTypeBoldInfoBackgroundColor = UIColor(red: 0.035, green: 0.459, blue: 0.843, alpha: 1)
    internal static let tagTypeBoldInfoColor = white
    internal static let tagTypeBoldInfoFocussedOutline = 4px solid UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeBoldInfoHoverBackgroundColor = UIColor(red: 0.051, green: 0.349, blue: 0.671, alpha: 1)
    internal static let tagTypeBoldInfoHoverColor = white
    internal static let tagTypeBoldInfoHoverIcon = white
    internal static let tagTypeBoldInfoPressedBackgroundColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeBoldInfoPressedColor = white
    internal static let tagTypeBoldMutedBackgroundColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let tagTypeBoldMutedColor = white
    internal static let tagTypeBoldMutedFocussedOutline = 4px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let tagTypeBoldMutedHoverBackgroundColor = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let tagTypeBoldMutedHoverColor = white
    internal static let tagTypeBoldMutedHoverIcon = white
    internal static let tagTypeBoldMutedPressedBackgroundColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let tagTypeBoldMutedPressedColor = white
    internal static let tagTypeBoldSuccessBackgroundColor = UIColor(red: 0.098, green: 0.522, blue: 0.345, alpha: 1)
    internal static let tagTypeBoldSuccessColor = white
    internal static let tagTypeBoldSuccessFocussedOutline = 4px solid UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeBoldSuccessHoverBackgroundColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeBoldSuccessHoverColor = white
    internal static let tagTypeBoldSuccessHoverIcon = white
    internal static let tagTypeBoldSuccessPressedBackgroundColor = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let tagTypeBoldSuccessPressedColor = white
    internal static let tagTypeBoldWarningBackgroundColor = UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let tagTypeBoldWarningColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let tagTypeBoldWarningFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeBoldWarningHoverBackgroundColor = UIColor(red: 0.878, green: 0.643, blue: 0.000, alpha: 1)
    internal static let tagTypeBoldWarningHoverColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let tagTypeBoldWarningHoverIcon = white
    internal static let tagTypeBoldWarningPressedBackgroundColor = UIColor(red: 0.678, green: 0.475, blue: 0.000, alpha: 1)
    internal static let tagTypeBoldWarningPressedColor = black
    internal static let tagTypeIconAlignItems = center
    internal static let tagTypeIconDisplay = flex
    internal static let tagTypeIconLargeLeadingIconMarginRight = 0.5rem
    internal static let tagTypeIconLargeSize = 1.25rem
    internal static let tagTypeIconLargeTrailingIconMarginLeft = 0.5rem
    internal static let tagTypeIconSmallLeadingIconMarginRight = 0.25rem
    internal static let tagTypeIconSmallSize = 1rem
    internal static let tagTypeIconSmallTrailingIconMarginLeft = 0.25rem
    internal static let tagTypeNeutralCriticalBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let tagTypeNeutralCriticalColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeNeutralCriticalFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let tagTypeNeutralCriticalHoverBackgroundColor = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let tagTypeNeutralCriticalHoverColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeNeutralCriticalHoverIcon = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeNeutralCriticalPressedBackgroundColor = UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let tagTypeNeutralCriticalPressedColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeNeutralDisabledBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let tagTypeNeutralDisabledColor = UIColor(red: 0.420, green: 0.412, blue: 0.482, alpha: 1)
    internal static let tagTypeNeutralInfoBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let tagTypeNeutralInfoColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeNeutralInfoFocussedOutline = 4px solid UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeNeutralInfoHoverBackgroundColor = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let tagTypeNeutralInfoHoverColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeNeutralInfoHoverIcon = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeNeutralInfoPressedBackgroundColor = UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeNeutralInfoPressedColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeNeutralMutedBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let tagTypeNeutralMutedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let tagTypeNeutralMutedFocussedOutline = 4px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let tagTypeNeutralMutedHoverBackgroundColor = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let tagTypeNeutralMutedHoverColor = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let tagTypeNeutralMutedHoverIcon = UIColor(red: 0.420, green: 0.412, blue: 0.482, alpha: 1)
    internal static let tagTypeNeutralMutedPressedBackgroundColor = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let tagTypeNeutralMutedPressedColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let tagTypeNeutralSuccessBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let tagTypeNeutralSuccessColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeNeutralSuccessFocussedOutline = 4px solid UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeNeutralSuccessHoverBackgroundColor = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let tagTypeNeutralSuccessHoverColor = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let tagTypeNeutralSuccessHoverIcon = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let tagTypeNeutralSuccessPressedBackgroundColor = UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeNeutralSuccessPressedColor = UIColor(red: 0.047, green: 0.333, blue: 0.196, alpha: 1)
    internal static let tagTypeNeutralWarningBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let tagTypeNeutralWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeNeutralWarningFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeNeutralWarningHoverBackgroundColor = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let tagTypeNeutralWarningHoverColor = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let tagTypeNeutralWarningHoverIcon = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let tagTypeNeutralWarningPressedBackgroundColor = UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeNeutralWarningPressedColor = UIColor(red: 0.447, green: 0.310, blue: 0.016, alpha: 1)
    internal static let tagTypeOutlineCriticalBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let tagTypeOutlineCriticalColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeOutlineCriticalFocussedBackgroundColor = UIColor(red: 1.000, green: 0.941, blue: 0.953, alpha: 1)
    internal static let tagTypeOutlineCriticalFocussedColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeOutlineCriticalFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let tagTypeOutlineCriticalHoverBackgroundColor = UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let tagTypeOutlineCriticalHoverColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeOutlineCriticalHoverIcon = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeOutlineCriticalHoverOutline = 1px solid UIColor(red: 0.965, green: 0.337, blue: 0.420, alpha: 1)
    internal static let tagTypeOutlineCriticalOutline = 1px solid UIColor(red: 0.996, green: 0.839, blue: 0.867, alpha: 1)
    internal static let tagTypeOutlineCriticalPressedBackgroundColor = UIColor(red: 0.890, green: 0.078, blue: 0.161, alpha: 1)
    internal static let tagTypeOutlineCriticalPressedColor = UIColor(red: 0.459, green: 0.039, blue: 0.039, alpha: 1)
    internal static let tagTypeOutlineCriticalPressedOutline = 1px solid UIColor(red: 0.890, green: 0.078, blue: 0.161, alpha: 1)
    internal static let tagTypeOutlineDisabledBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let tagTypeOutlineDisabledColor = UIColor(red: 0.420, green: 0.412, blue: 0.482, alpha: 1)
    internal static let tagTypeOutlineDisabledOutline = 1px solid UIColor(red: 0.925, green: 0.925, blue: 0.953, alpha: 1)
    internal static let tagTypeOutlineInfoBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let tagTypeOutlineInfoColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeOutlineInfoFocussedBackgroundColor = UIColor(red: 0.941, green: 0.976, blue: 1.000, alpha: 1)
    internal static let tagTypeOutlineInfoFocussedColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeOutlineInfoFocussedOutline = 4px solid UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeOutlineInfoHoverBackgroundColor = UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let tagTypeOutlineInfoHoverColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeOutlineInfoHoverIcon = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeOutlineInfoHoverOutline = 1px solid UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeOutlineInfoOutline = 1px solid UIColor(red: 0.843, green: 0.937, blue: 0.996, alpha: 1)
    internal static let tagTypeOutlineInfoPressedBackgroundColor = UIColor(red: 0.494, green: 0.780, blue: 0.988, alpha: 1)
    internal static let tagTypeOutlineInfoPressedColor = UIColor(red: 0.012, green: 0.239, blue: 0.518, alpha: 1)
    internal static let tagTypeOutlineInfoPressedOutline = 1px solid UIColor(red: 0.180, green: 0.620, blue: 0.980, alpha: 1)
    internal static let tagTypeOutlineMutedBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let tagTypeOutlineMutedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let tagTypeOutlineMutedFocussedBackgroundColor = UIColor(red: 0.965, green: 0.965, blue: 0.976, alpha: 1)
    internal static let tagTypeOutlineMutedFocussedColor = UIColor(red: 0.239, green: 0.235, blue: 0.322, alpha: 1)
    internal static let tagTypeOutlineMutedFocussedOutline = 4px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let tagTypeOutlineMutedHoverBackgroundColor = UIColor(red: 0.949, green: 0.949, blue: 0.973, alpha: 1)
    internal static let tagTypeOutlineMutedHoverColor = UIColor(red: 0.169, green: 0.169, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineMutedHoverIcon = UIColor(red: 0.322, green: 0.314, blue: 0.400, alpha: 1)
    internal static let tagTypeOutlineMutedHoverOutline = 1px solid UIColor(red: 0.753, green: 0.745, blue: 0.800, alpha: 1)
    internal static let tagTypeOutlineMutedOutline = 1px solid UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let tagTypeOutlineMutedPressedBackgroundColor = UIColor(red: 0.875, green: 0.867, blue: 0.906, alpha: 1)
    internal static let tagTypeOutlineMutedPressedColor = UIColor(red: 0.122, green: 0.122, blue: 0.196, alpha: 1)
    internal static let tagTypeOutlineMutedPressedOutline = 1px solid UIColor(red: 0.600, green: 0.592, blue: 0.667, alpha: 1)
    internal static let tagTypeOutlineSuccessBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let tagTypeOutlineSuccessColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineSuccessFocussedBackgroundColor = UIColor(red: 0.945, green: 0.996, blue: 0.976, alpha: 1)
    internal static let tagTypeOutlineSuccessFocussedColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineSuccessFocussedOutline = 4px solid UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeOutlineSuccessHoverBackgroundColor = UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let tagTypeOutlineSuccessHoverColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineSuccessHoverIcon = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineSuccessHoverOutline = 1px solid UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeOutlineSuccessOutline = 1px solid UIColor(red: 0.851, green: 0.984, blue: 0.933, alpha: 1)
    internal static let tagTypeOutlineSuccessPressedBackgroundColor = UIColor(red: 0.424, green: 0.918, blue: 0.729, alpha: 1)
    internal static let tagTypeOutlineSuccessPressedColor = UIColor(red: 0.063, green: 0.416, blue: 0.251, alpha: 1)
    internal static let tagTypeOutlineSuccessPressedOutline = 1px solid UIColor(red: 0.141, green: 0.859, blue: 0.573, alpha: 1)
    internal static let tagTypeOutlineWarningBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let tagTypeOutlineWarningColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeOutlineWarningFocussedBackgroundColor = UIColor(red: 0.996, green: 0.984, blue: 0.922, alpha: 1)
    internal static let tagTypeOutlineWarningFocussedColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeOutlineWarningFocussedOutline = 4px solid UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeOutlineWarningHoverBackgroundColor = UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let tagTypeOutlineWarningHoverColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeOutlineWarningHoverIcon = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeOutlineWarningHoverOutline = 1px solid UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeOutlineWarningOutline = 1px solid UIColor(red: 0.996, green: 0.969, blue: 0.839, alpha: 1)
    internal static let tagTypeOutlineWarningPressedBackgroundColor = UIColor(red: 0.965, green: 0.847, blue: 0.376, alpha: 1)
    internal static let tagTypeOutlineWarningPressedColor = UIColor(red: 0.592, green: 0.424, blue: 0.027, alpha: 1)
    internal static let tagTypeOutlineWarningPressedOutline = 1px solid UIColor(red: 0.957, green: 0.702, blue: 0.102, alpha: 1)
    internal static let tagTypeRootAlignItems = center
    internal static let tagTypeRootBorderRadius = 32px
    internal static let tagTypeRootDisplay = flex
    internal static let tagTypeRootLabelLargeFontFamily = Inter
    internal static let tagTypeRootLabelLargeFontSize = 14px
    internal static let tagTypeRootLabelLargeFontWeight = 500
    internal static let tagTypeRootLabelLargeLineHeight = 20px
    internal static let tagTypeRootLabelMargin = 0px 4px
    internal static let tagTypeRootLabelSmallFontFamily = Inter
    internal static let tagTypeRootLabelSmallFontSize = 12px
    internal static let tagTypeRootLabelSmallFontWeight = 500
    internal static let tagTypeRootLabelSmallLineHeight = 16px
    internal static let tagTypeRootLargeFontSize = 14px
    internal static let tagTypeRootLargeHeight = 20px
    internal static let tagTypeRootLargeLineHeight = 1.25rem
    internal static let tagTypeRootLargePadding = 8px 8px
    internal static let tagTypeRootSmallFontSize = 12px
    internal static let tagTypeRootSmallHeight = 12px
    internal static let tagTypeRootSmallLineHeight = 1rem
    internal static let tagTypeRootSmallPadding = 4px 4px
    internal static let textBody01FontFamily = Inter
    internal static let textBody01FontSize = 1.125rem
    internal static let textBody01FontWeight = 400
    internal static let textBody01LineHeight = 1.75rem
    internal static let textBody02FontFamily = Inter
    internal static let textBody02FontSize = 1rem
    internal static let textBody02FontWeight = 400
    internal static let textBody02LineHeight = 1.5rem
    internal static let textBody03FontFamily = Inter
    internal static let textBody03FontSize = 0.875rem
    internal static let textBody03FontWeight = 400
    internal static let textBody03LineHeight = 1.25rem
    internal static let textBody04FontFamily = Inter
    internal static let textBody04FontSize = 0.75rem
    internal static let textBody04FontWeight = 400
    internal static let textBody04LineHeight = 1rem
    internal static let textButtonLargeFontFamily = Inter
    internal static let textButtonLargeFontSize = 0.875rem
    internal static let textButtonLargeFontWeight = 500
    internal static let textButtonLargeLineHeight = 1.25rem
    internal static let textButtonSmallFontFamily = Inter
    internal static let textButtonSmallFontSize = 0.75rem
    internal static let textButtonSmallFontWeight = 500
    internal static let textButtonSmallLineHeight = 1rem
    internal static let textHeading01FontFamily = Inter
    internal static let textHeading01FontSize = 2.125rem
    internal static let textHeading01FontWeight = 700
    internal static let textHeading01LineHeight = 2.625rem
    internal static let textHeading02FontFamily = Inter
    internal static let textHeading02FontSize = 1.875rem
    internal static let textHeading02FontWeight = 700
    internal static let textHeading02LineHeight = 2.375rem
    internal static let textHeading03FontFamily = Inter
    internal static let textHeading03FontSize = 1.625rem
    internal static let textHeading03FontWeight = 700
    internal static let textHeading03LineHeight = 2.125rem
    internal static let textHeading04FontFamily = Inter
    internal static let textHeading04FontSize = 1.5rem
    internal static let textHeading04FontWeight = 700
    internal static let textHeading04LineHeight = 2rem
    internal static let textHeading05FontFamily = Inter
    internal static let textHeading05FontSize = 1.375rem
    internal static let textHeading05FontWeight = 700
    internal static let textHeading05LineHeight = 1.875rem
    internal static let textLabelLargeFontFamily = Inter
    internal static let textLabelLargeFontSize = 1rem
    internal static let textLabelLargeFontWeight = 500
    internal static let textLabelLargeLineHeight = 1.5rem
    internal static let textLabelLargeModerateFontFamily = Inter
    internal static let textLabelLargeModerateFontSize = 1rem
    internal static let textLabelLargeModerateFontWeight = 600
    internal static let textLabelLargeModerateLineHeight = 1.5rem
    internal static let textLabelMediumFontFamily = Inter
    internal static let textLabelMediumFontSize = 0.875rem
    internal static let textLabelMediumFontWeight = 500
    internal static let textLabelMediumLineHeight = 1.25rem
    internal static let textLabelMediumModerateFontFamily = Inter
    internal static let textLabelMediumModerateFontSize = 0.875rem
    internal static let textLabelMediumModerateFontWeight = 600
    internal static let textLabelMediumModerateLineHeight = 1.25rem
    internal static let textLabelSmallFontFamily = Inter
    internal static let textLabelSmallFontSize = 0.75rem
    internal static let textLabelSmallFontWeight = 500
    internal static let textLabelSmallLineHeight = 1rem
    internal static let textLabelSmallModerateFontFamily = Inter
    internal static let textLabelSmallModerateFontSize = 0.75rem
    internal static let textLabelSmallModerateFontWeight = 600
    internal static let textLabelSmallModerateLineHeight = 1rem
    internal static let textLinkLargeFontFamily = Inter
    internal static let textLinkLargeFontSize = 1.125rem
    internal static let textLinkLargeFontWeight = 500
    internal static let textLinkLargeLineHeight = 1.625rem
    internal static let textLinkLargeTextDecoration = underline
    internal static let textLinkMediumFontFamily = Inter
    internal static let textLinkMediumFontSize = 1rem
    internal static let textLinkMediumFontWeight = 500
    internal static let textLinkMediumLineHeight = 1.5rem
    internal static let textLinkMediumTextDecoration = underline
    internal static let textLinkSmallFontFamily = Inter
    internal static let textLinkSmallFontSize = 0.875rem
    internal static let textLinkSmallFontWeight = 500
    internal static let textLinkSmallLineHeight = 1.25rem
    internal static let textLinkSmallTextDecoration = underline
    internal static let textLinkXsmallFontFamily = Inter
    internal static let textLinkXsmallFontSize = 0.75rem
    internal static let textLinkXsmallFontWeight = 500
    internal static let textLinkXsmallLineHeight = 1rem
    internal static let textLinkXsmallTextDecoration = underline
    internal static let textParagraphLargeFontFamily = Inter
    internal static let textParagraphLargeFontSize = 1rem
    internal static let textParagraphLargeFontWeight = 400
    internal static let textParagraphLargeLineHeight = 1.5rem
    internal static let textParagraphLargeStrongFontFamily = Inter
    internal static let textParagraphLargeStrongFontSize = 1rem
    internal static let textParagraphLargeStrongFontWeight = 700
    internal static let textParagraphLargeStrongLineHeight = 1.5rem
    internal static let textParagraphMediumFontFamily = Inter
    internal static let textParagraphMediumFontSize = 0.875rem
    internal static let textParagraphMediumFontWeight = 400
    internal static let textParagraphMediumLineHeight = 21.375rem
    internal static let textParagraphMediumStrongFontFamily = Inter
    internal static let textParagraphMediumStrongFontSize = 0.875rem
    internal static let textParagraphMediumStrongFontWeight = 700
    internal static let textParagraphMediumStrongLineHeight = 1.375rem
    internal static let textParagraphSmallFontFamily = Inter
    internal static let textParagraphSmallFontSize = 0.75rem
    internal static let textParagraphSmallFontWeight = 400
    internal static let textParagraphSmallLineHeight = 1.25rem
    internal static let textParagraphSmallStrongFontFamily = Inter
    internal static let textParagraphSmallStrongFontSize = 0.75rem
    internal static let textParagraphSmallStrongFontWeight = 700
    internal static let textParagraphSmallStrongLineHeight = 1.25rem
    internal static let textSubheading01FontFamily = Inter
    internal static let textSubheading01FontSize = 1.5rem
    internal static let textSubheading01FontWeight = 600
    internal static let textSubheading01LineHeight = 2rem
    internal static let textSubheading02FontFamily = Inter
    internal static let textSubheading02FontSize = 1.375rem
    internal static let textSubheading02FontWeight = 600
    internal static let textSubheading02LineHeight = 1.875rem
    internal static let textSubheading03FontFamily = Inter
    internal static let textSubheading03FontSize = 1.25rem
    internal static let textSubheading03FontWeight = 600
    internal static let textSubheading03LineHeight = 1.75rem
    internal static let textSubheading04FontFamily = Inter
    internal static let textSubheading04FontSize = 1.125rem
    internal static let textSubheading04FontWeight = 600
    internal static let textSubheading04LineHeight = 1.5rem
    internal static let textSubheading05FontFamily = Inter
    internal static let textSubheading05FontSize = 1rem
    internal static let textSubheading05FontWeight = 600
    internal static let textSubheading05LineHeight = 1.5rem
    internal static let textSubheading06FontFamily = Inter
    internal static let textSubheading06FontSize = 0.875rem
    internal static let textSubheading06FontWeight = 600
    internal static let textSubheading06LineHeight = 1.25rem
    internal static let textTextInputFieldCharacterCountFontFamily = Inter
    internal static let textTextInputFieldCharacterCountFontSize = 0.875rem
    internal static let textTextInputFieldCharacterCountFontStyle = italic
    internal static let textTextInputFieldCharacterCountFontWeight = 400
    internal static let textTextInputFieldCharacterCountLineHeight = 1.25rem
    internal static let textTextInputFieldItalicsFontFamily = Inter
    internal static let textTextInputFieldItalicsFontSize = 0.875rem
    internal static let textTextInputFieldItalicsFontStyle = italic
    internal static let textTextInputFieldItalicsFontWeight = 400
    internal static let textTextInputFieldItalicsLineHeight = 1.25rem
}
